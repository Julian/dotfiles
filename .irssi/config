servers = (
  {
    address = "pi.grayvines.com";
    chatnet = "Freenode";
    port = "1123";
    password = "Julian/Freenode:";
    use_ssl = "yes";
    ssl_cert = "~/.irssi/certs/cert.pem";
    ssl_verify = "yes";
    autoconnect = "yes";
  }
);

chatnets = { Freenode = { type = "IRC"; }; };

channels = (
  { name = "#python"; chatnet = "Freenode"; autojoin = "yes"; },
  { 
    name = "#python-offtopic";
    chatnet = "Freenode";
    autojoin = "yes";
  },
  { name = "#vim"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#zsh"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#twisted"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#pypy"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#python-dev"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#python-testing"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "##math"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#nycpython"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#twisted-dev"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#pypa"; chatnet = "Freenode"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  UNSET = "set -clear";
  RESET = "set -default";
  ALLLASTLOG = "script exec foreach (Irssi::windows()) {Irssi::command(“lastlog – -window \\$_->{‘refnum’} $*”)\\;}";
  vm_add = "/^statusbar prompt add -after input -alignment right vim_mode";
  vm_del = "/^statusbar prompt remove vim_mode";
  access = "/msg ChanServ access";
  cc = "/msg *status ClearBuffer $C";
  h = "help";
  history = "/quote HISTORY";
  ll = "/script exec foreach (Irssi::windows()) {Irssi::command(\"lastlog – -window \\$_->{'refnum'} $*\")\\;}";
  ops = "/msg chanserv access list";
  s = "/window goto info";
  0 = "/window 10";
  1 = "/window 1";
  2 = "/window 2";
  3 = "/window 3";
  4 = "/window 4";
  5 = "/window 5";
  6 = "/window 6";
  7 = "/window 7";
  8 = "/window 8";
  9 = "/window 9";
  10 = "/window 10";
  11 = "/window 11";
  12 = "/window 12";
  13 = "/window 13";
  14 = "/window 14";
  15 = "/window 15";
  16 = "/window 16";
  17 = "/window 17";
  18 = "/window 18";
  19 = "/window 19";
  20 = "/window 20";
  21 = "/window 21";
  22 = "/window 22";
  23 = "/window 23";
  24 = "/window 24";
  25 = "/window 25";
  26 = "/window 26";
  27 = "/window 27";
  28 = "/window 28";
  29 = "/window 29";
  30 = "/window 30";
  31 = "/window 31";
  32 = "/window 32";
  33 = "/window 33";
  34 = "/window 34";
  35 = "/window 35";
  36 = "/window 36";
  37 = "/window 37";
  38 = "/window 38";
  39 = "/window 39";
  40 = "/window 40";
  41 = "/window 41";
  42 = "/window 42";
  43 = "/window 43";
  44 = "/window 44";
  45 = "/window 45";
  46 = "/window 46";
  47 = "/window 47";
  48 = "/window 48";
  49 = "/window 49";
  50 = "/window 50";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: %m$0-%n}";
    act = "{sb Act: $0-}";
    more = "%k%3-- more --%n";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "yes";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        usercount = { };
        vim_windows = { };
        vim_mode = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    remove = { items = { }; disabled = "yes"; };
    del = { items = { }; disabled = "yes"; };
    delete = { items = { }; disabled = "yes"; };
    prompt = {
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        input = { priority = "10"; };
      };
      position = "100";
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "tos9";
    user_name = "tos9";
    nick = "tos9";
    timestamp_format = "%H:%M:%S";
    use_proxy = "no";
    proxy_address = "pi.grayvines.com";
    proxy_port = "1123";
  };
  "fe-text" = { actlist_sort = "refnum"; paste_join_multiline = "no"; };
  "irc/core" = { alternate_nick = "tos9_"; skip_motd = "yes"; };
  "fe-common/core" = {
    window_history = "yes";
    show_names_on_join = "no";
    theme = "weed";
    window_default_level = "MSGS PUBLICS NOTICES CTCPS ACTIONS KICKS MODES TOPICS NICKS CRAP CLIENTCRAP";
    window_check_level_first = "yes";
    activity_hide_targets = "##math";
    emphasis_replace = "yes";
    autolog = "yes";
    autolog_path = "~/.irclogs/%Y/$tag/$0.%m-%d.log";
    autolog_level = "ALL -CRAP -CLIENTCRAP -CTCPS -JOINS -PARTS -QUITS -MODES";
    activity_hide_level = "JOINS PARTS QUITS KICKS MODES NICKS";
    show_nickmode_empty = "no";
  };
  "perl/core/scripts" = {
    awl_maxlines = "5";
    awl_block = "20";
    awl_sbar_maxlength = "yes";
    awl_display_key = "%k%2$N$H$C$S%n";
    awl_display_nokey = "%k%2$N$H$C$S%n";
    trackbar_style = "%B";
    uberprompt_load_hook = "/^vm_add";
    uberprompt_unload_hook = "/^vm_del";
    notifier_on_regex = "(tos9|JulianWasTaken)";
    awl_shared_sbar = "OFF";
    nickcolor_colors = "2 3 4 5 6 7 9 10 11 12 13 14 15 16";
    awl_viewer = "no";
  };
};
hilights = (
  { text = "tos9"; color = "%M"; nick = "yes"; word = "yes"; },
  { text = "Julian"; color = "%M"; nick = "yes"; word = "yes"; }
);
ignores = (
  { mask = "bbot2"; level = "ALL NO_ACT"; },
  { mask = "bbot2_"; level = "ALL NO_ACT"; },
  { mask = "py-bb"; level = "ALL NO_ACT"; },
  { mask = "py-bb_"; level = "ALL NO_ACT"; },
  { level = "JOINS PARTS QUITS"; },
  { mask = "*zzz*"; level = "NICKS NO_ACT"; },
  { mask = "*afk*"; level = "NICKS NO_ACT"; },
  { mask = "*away*"; level = "NICKS NO_ACT"; },
  { mask = "*|bnc"; level = "NICKS NO_ACT"; },
  { mask = "irker*"; level = "ALL NO_ACT"; },
  { mask = "ldlework"; level = "ALL NO_ACT"; },
  { mask = "recheck"; level = "ALL NO_ACT"; }
);
keyboard = (
  { key = "meta-!"; id = "change_window"; data = "21"; },
  { key = "meta-@"; id = "change_window"; data = "22"; },
  { key = "meta-#"; id = "change_window"; data = "23"; },
  { key = "meta-\\$"; id = "change_window"; data = "24"; },
  { key = "meta-%"; id = "change_window"; data = "25"; },
  { key = "meta-^"; id = "change_window"; data = "26"; },
  { key = "meta-&"; id = "change_window"; data = "27"; },
  { key = "meta-*"; id = "change_window"; data = "28"; },
  { key = "meta-("; id = "change_window"; data = "29"; },
  { key = "meta-)"; id = "change_window"; data = "30"; }
);
logs = { };
windows = {
  1 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#python";
        tag = "Freenode";
      }
    );
    sticky = "yes";
  };
  2 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#python-offtopic";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  3 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#python-testing";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  4 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#vim";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  5 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#neovim";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  6 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#zsh";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  7 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#twisted";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  8 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#twisted-dev";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  9 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#pypy";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  10 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#techcrap";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  11 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#hypothesis";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  12 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#pypa";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  13 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#pypa-dev";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  14 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#python-infra";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  15 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#json-schema";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  16 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "##math";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  17 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#python-dev";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  18 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#nycpython";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  19 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "##glyph";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  20 = {
    level = "ALL";
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#DRMacIver";
        tag = "Freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  21 = {
    immortal = "yes";
    name = "info";
    level = "ALL";
    sticky = "yes";
    parent = "1";
  };
  22 = {
    name = "hilight";
    level = "PUBLICS NOTICES CTCPS ACTIONS JOINS PARTS QUITS KICKS MODES TOPICS NICKS HILIGHTS";
    sticky = "yes";
  };
};
mainwindows = {
  1 = { 
    first_line = "4";
    lines = "48";
    first_column = "0";
    columns = "179";
  };
  22 = { 
    first_line = "1";
    lines = "3";
    first_column = "0";
    columns = "179";
  };
};

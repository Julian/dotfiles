#!/usr/bin/env python3

from pathlib import Path
import os
import re
import subprocess
import sys


LEAN3_MARKER = re.compile(r'"leanprover(?:|-community)/lean:(.*)"')
LEANPKG = Path("leanpkg.toml")

LEAN3_DIR = Path(
    os.environ.get("LEAN3_DIR", os.path.expanduser("~/.local/share/lean/")),
)
LEAN4_DIR = Path(
    os.environ.get("LEAN4_DIR", Path("/opt/homebrew/Cellar/lean@4/")),
)
LEAN_DEFAULT_VERSION = os.environ.get("LEAN_DEFAULT_VERSION")
MAYBE_DEBUG = "-debug" if "LEAN_DEBUG" in os.environ else ""


parent = subprocess.run(
    ["ps", "-o", "command", "-p", str(os.getppid())],
    capture_output=True,
).stdout.strip()
needs_lean3 = any(
    each in parent
    for each in {b"lean-language-server", b"leanproject", b"lean3ls"}
)


def lean3(version):
    return LEAN3_DIR / f"lean-{version}-darwin{MAYBE_DEBUG}"


def lean4(version):
    return next(each for each in LEAN4_DIR.iterdir() if each.is_dir())


if LEANPKG.exists():
    match = LEAN3_MARKER.search(LEANPKG.read_text())
    version = match.group(1) if match is not None else LEAN_DEFAULT_VERSION
else:
    version = LEAN_DEFAULT_VERSION

if not version:
    if needs_lean3:
        available = {
            tuple(map(int, path.name.split("-")[1].split("."))): path
            for path in LEAN3_DIR.glob(f"lean-*-darwin{MAYBE_DEBUG}")
        }
        version = ".".join(map(str, max(available)))
    else:
        version = "4.0.0"


fn = lean3 if version.startswith("3") else lean4
executable = Path(sys.argv[0]).name
lean = fn(version) / "bin" / executable

try:
    os.execvp(lean, [lean] + sys.argv[1:])
except FileNotFoundError:
    sys.exit(f"lean \033[95mv{version}\033[0m is not installed.")

[bundle]
development = ["bpython[urwid]", "pipdeptree", "ptpython", "pudb", "q"]
core = [
    "coverage>=5.0a7",
    "filesystems",
    "glom",
    "hyperlink",
    "hypothesis",
    "inflect",
    "jinja2",
    "pathlib2; python_version<='2.7'",
    "subprocess32; python_version<='2.7'",
    "pendulum",
    "pyperf",
    "pyrsistent",
    "pytest",
    "pytest-cov",
    "python-papi; platform_system=='Linux' and platform_machine != 'aarch64'",
    "pytoml",
    "pyyaml",
    "testrepository",
    "treq",
    "twisted[conch,tls]",
]

# --- Development ---

[virtualenv.dev]
install-bundle = ["core", "development"]
install = ["vmprof"]
link = [
    "bpython",
    "bpython-urwid",
    "conch",
    "coverage>=5.0a7",
    "glom",
    "green",
    "pip",
    "pyperf",
    "python",
    "ptpython",
    "pudb",
    "py.test",
    "testr",
    "trial",
    "twist",
    "twistd",
    "vmprofshow",
]
link-module = ["pydoc:pydoc2"]

[virtualenv.dev3]
python = "pypy3"
install-bundle = ["core", "development"]
link = [
    "bpython:bpython3",
    "bpython-urwid:bpython-urwid3",
    "coverage:coverage3",
    "glom:glom3",
    "green:green3",
    "pip:pip3",
    "python:python3",
    "ptpython:ptpython3",
    "pudb3:pudb3",
    "py.test:py.test3",
    "pyperf:pyperf3",
    "testr:testr3",
    "trial:trial3",
    "twist:twist3",
]
link-module = ["pydoc"]

[virtualenv.dev-cpython]
python = "python2.7"
install-bundle = ["core", "development"]
link = [
    "ptpython:ptpython-cpython2",
    "python:cpython2",
    "pudb:pudb-cpython2",
    "py.test:py.test-cpython2",
    "trial:trial-cpython2",
]

[virtualenv.dev3-cpython]
python = "python3.8"
install-bundle = ["core", "development"]
install = ["pyinstrument"]
link = [
    "bpython:bpython-cpython3",
    "bpython-urwid:bpython-urwid-cpython3",
    "coverage:coverage-cpython3",
    "glom:glom-cpython3",
    "green:green-cpython3",
    "pip:pip-cpython3",
    "ptpython:ptpython-cpython3",
    "pyinstrument",
    "python:cpython3",
    "pudb3:pudb-cpython3",
    "py.test:py.test-cpython3",
    "pyperf:pyperf-cpython3",
    "testr:testr-cpython3",
    "trial:trial-cpython3",
    "twist:twist-cpython3",
]

[virtualenv.aws]
python = "python3.8"
install-bundle = ["development"]
install = ["awscli", "boto", "boto3", "saws"]
link = ["aws", "saws"]

[virtualenv.black]
python = "python3.8"
install = ["black"]
link = ["black"]

[virtualenv.colortest]
install = ["colortest"]
link = ["colortest"]

[virtualenv.detect-secrets]
install = ["detect-secrets"]
link = ["detect-secrets"]

[virtualenv.doc8]
install = ["doc8", "pygments"]
link = ["doc8"]

[virtualenv.findme]
python = "pypy"
install-bundle = ["development"]
install = ["findme"]
link = ["findme"]

[virtualenv.findme-cpython3]
python = "python3.8"
install-bundle = ["development"]
install = ["findme"]
link = ["findme:findme-cpython3"]

[virtualenv.findme-pypy3]
python = "pypy3"
install-bundle = ["development"]
install = ["findme"]
link = ["findme:findme-pypy3"]

[virtualenv.google]
install-bundle = ["development"]
install = ["google-api-python-client"]

[virtualenv.hg]
python = "python2"
install = ["mercurial"]
link = ["hg"]

[virtualenv.httpie]
install = ["httpie"]
link = ["http"]

[virtualenv.httpstat]
install = ["httpstat"]
link = ["httpstat"]

[virtualenv.imaging]
python = "python3.8"
install-bundle = ["development"]
install = [
    "libraw-cffi",
    "pillow",
    "rawkit",
]

[virtualenv.jsonschema]
install-bundle = ["development"]
install = ["jsonschema[format]", "mock", "twisted"]
link = ["jsonschema"]

[virtualenv.litecli]
python = "pypy3"
install = ["litecli"]
link = ["litecli"]

[virtualenv.ml]
python = "python3.8"
install-bundle = ["core", "development"]
install = [
    "numpy",
    "pandas",

    "jupyter",
    "jupyterlab",
    "nteract_on_jupyter",
    "octave_kernel",

    "ipympl",
    "matplotlib",
    "altair",
    "git+https://github.com/altair-viz/altair_pandas",

    "bokeh",
    "graphviz",
    "plotly",
    "plotnine",
    "seaborn",
    "yellowbrick",

    "voila",

    "auto-sklearn",
    "featuretools",
    "h2o",

    "scikit-learn",
    "scikit-optimize[plots]",
    "scikit-plot",

    "tensorflow",
    "torch",
    "xgboost",
    "xgbfir",

    "eli5",
    "lime",
    "shap",

    "h5py",
    "svmlight-loader",

    "kaggle",

    "hdrhistogram",

    "networkx",

    "boto3",
    "requests",
]
link = [
    "bokeh",
    "dask-scheduler",
    "dask-ssh",
    "dask-worker",
    "featuretools",
    "jupyter",
    "kaggle",
    "ptpython:ml",
    "xgbfir",
]

[virtualenv.bandit]
python = "pypy3"
install = ["bandit"]
link = ["bandit"]

[virtualenv.check-manifest]
python = "python3.8"
install = ["check-manifest"]
link = ["check-manifest"]

[virtualenv.mkpkg]
install = ["mkpkg"]
link = ["mkpkg"]

[virtualenv.neovim]
python = "pypy"
install = ["pynvim"]

[virtualenv.neovim3]
python = "python3.8"
install = ["pynvim"]

[virtualenv.ngxtop]
install = ["ngxtop"]
link = ["ngxtop"]

[virtualenv.pep517]
python = "python3.8"
install = ["pep517"]
link-module = ["pep517.build:pep517-build", "pep517.check:pep517-check"]

[virtualenv.pex]
install = ["pex"]
link = ["pex"]

[virtualenv.pipenv]
python = "python3.8"
install = ["pipenv"]
link = ["pipenv"]

[virtualenv.poetry]
install = ["poetry"]
link = ["poetry"]

[virtualenv.piptools]
install = ["pip-tools"]
link = ["pip-compile"]

[virtualenv.piptools3]
python = "pypy3"
install = ["pip-tools"]
link = ["pip-compile:pip-compile3"]

[virtualenv.cast]
python = "python3.8"
install-bundle = ["development"]
install = ["cast-cli"]
link = ["cast"]

[virtualenv.pydocstyle]
python = "python3.8"
install = ["pydocstyle"]
link = ["pydocstyle"]

[virtualenv.pypinfo]
python = "python3.8"
install = ["pypinfo"]
link = ["pypinfo"]

[virtualenv.shiv]
python = "python3.8"
install = ["shiv"]
link = ["shiv"]

[virtualenv.sphinx]
python = "python3.8"
install-bundle = ["development"]
install = ["sphinx", "sphinxcontrib.spelling"]
link = [
    "rst2html.py",
    "rst2html5.py",
    "sphinx-apidoc",
    "sphinx-autogen",
    "sphinx-build",
    "sphinx-quickstart",
]

[virtualenv.sphobjinv]
python = "pypy3"
install = ["sphobjinv"]
link = ["sphobjinv"]

[virtualenv.style]
install = ["ebb-lint"]
link = ["flake8"]

[virtualenv.style3]
python = "pypy3"
install = ["ebb-lint"]
link = ["flake8:flake83"]

[virtualenv.subunit]
install = ["python-subunit"]
link = [
    "subunit-1to2",
    "subunit-2to1",
    "subunit-filter",
    "subunit-ls",
    "subunit-notify",
    "subunit-output",
    "subunit-stats",
    "subunit-tags",
    "subunit2csv",
    "subunit2disk",
    "subunit2gtk",
    "subunit2junitxml",
    "subunit2pyunit",
    "tap2subunit",
]

[virtualenv.termtosvg]
python = "python3"
install = ["termtosvg"]
link = ["termtosvg"]

[virtualenv.tox]
python = "pypy3"
install = ["tox"]
link = ["tox"]

[virtualenv.twine]
install = ["twine", "keyring"]
link = ["twine", "keyring"]

[virtualenv.remarshal]
install = ["remarshal"]
link = [
    "json2json",
    "toml2json",
    "yaml2json",
    "json2toml",
    "toml2toml",
    "yaml2toml",
    "json2yaml",
    "toml2yaml",
    "yaml2yaml",
]

[virtualenv.youtube-dl]
install = ["youtube-dl"]
link = ["youtube-dl"]

[virtualenv.watchdog]
install = ["watchdog"]
link = ["watchmedo"]

# --- Developing ---

[virtualenv.blog]
python = "python3"
requirements = ["${DEVELOPMENT}/julian.github.io/requirements.txt"]
link = ["invoke", "pelican", "pelican-quickstart", "pelican-themes"]

[virtualenv.diff]
install-bundle = ["development"]
install = ["${DEVELOPMENT}/diff", "twisted[tls]"]

[virtualenv.filesystems]
install-bundle = ["development"]
install = ["${DEVELOPMENT}/filesystems", "testscenarios", "twisted"]

[virtualenv.svmlight-loader]
python = "pypy3"
install-bundle = ["development"]
install = [
    "Cython; platform_python_implementation == 'pypy'",
    "${DEVELOPMENT}/svmlight-loader[sklearn]",
    "pytest",
]

[virtualenv.great]
install-bundle = ["development"]
install = ["${DEVELOPMENT}/Great", "twisted[tls]"]
requirements = [
    "${DEVELOPMENT}/Great/test-requirements.txt",
    "${DEVELOPMENT}/Great/automanual/requirements.txt",
]

[virtualenv.minion]
install-bundle = ["development"]
install = ["${DEVELOPMENT}/Minion", "twisted[tls]"]
requirements = ["${DEVELOPMENT}/Minion/test-requirements.txt"]

[virtualenv.regret]
install-bundle = ["development"]
install = ["${DEVELOPMENT}/regret", "twisted[tls]"]

[virtualenv.twisted]
python = "python3.8"
install-bundle = ["development"]
install = ["-e", "${DEVELOPMENT}/twisted"]
